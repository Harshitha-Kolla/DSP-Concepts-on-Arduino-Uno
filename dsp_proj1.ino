float yn[120];
int k = 0;
int j = 0;


void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);

}

void loop() {
  // put your main code here, to run repeatedly:
   //Test signal
   float t = micros()/1.0e6;
   float xn[120] = {0, 0, -0.0403442, -0.009552, -0.000915527, -0.00189209, 0.000579834, 0.00088501, 0.0017395, 0.00195312, 0.000152588, -0.000915527, 0.00143433, -0.000854492, -0.000640869, 0.000640869, -0.000396729, 0.00167847, 6.10352e-05, -0.000213623, -0.000518799, 0.000305176, -3.05176e-05, 0.000732422, 3.05176e-05, 0.000946045, -6.10352e-05, -0.000762939, -0.000976562, -0.00012207, 0.00271606, 0.00262451, -0.000854492, 0.000549316, 6.10352e-05, 0.000305176, 9.15527e-05, -0.000579834, 0.000213623, -6.10352e-05, 0, -0.000183105, 0.000213623, 3.05176e-05, -0.000366211, -0.00579834, -0.000152588, -0.0108643, -0.00918579, 0.000396729, 0.000213623, 0.00128174, -0.0188904, 0.000549316, -0.0550537, -0.0355225, -0.020813, -0.0398865, 0.0326843, -0.027771, -0.0177002, -0.0475464, 0.00320435, -0.0158386, 0.0164185, 0.0103455, -0.00787354, 0.0188599, 0.0224915, -0.0140686, -0.0229797, -0.0194092, -0.0120544, -0.00436401, 0.0262146, 0.0362244, -0.0171814, -0.00415039, 0.0067749, 0.00088501, -0.000366211, -0.000213623, 0.000244141, 0.00012207, 0.000518799, 0.0125427, 0.00836182, 0.0057373, -0.00393677, 0.000213623, -0.00744629, 0.0332031, -0.0443726, 0.0260925, -0.072937, 0.120361, -0.0543823, 0.00805664, -0.0483704, 0.0179443, -0.0153809, -0.0219727, -0.0397339, 0.018158, 0.0150146, -0.0315247, 0.0458984, -0.0141602, -0.00485229, -0.0119934, 0.0213318, 0.00473022, -0.011261, -0.0420837, 0.0129089, 0.0385437, -0.00698853, -0.0319214, -0.000457764, -0.0050354};
   yn[0] = 0;

   //Compute the filtered signal

  for(int i=0; i<120; i++){
    if(i==0) yn[i] = 0.75855*xn[i];
    else  yn[i] = -0.51709*yn[i-1] + 0.75855*xn[i] + 0.75855*xn[i-1];
  }
   
   if(k % 3 == 0){
       //Output
       Serial.print(20*xn[j]);
       Serial.print(" ");
       Serial.println(20*yn[j]);
   }
   j = j+1;
   k = k+1;
}
